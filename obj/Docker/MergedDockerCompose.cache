name: dockercompose13597794595954627979
services:
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: P@ssw0rd123$$
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "8881"
      protocol: tcp
  customerwebapi:
    build:
      context: C:\Prabhanjan\AspNetCore7\APIGatewaySolution
      dockerfile: CustomerWebAPI/Dockerfile
    container_name: customer-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: customerdb
      DB_NAME: dms_customer
      DB_SA_PASSWORD: P@ssw0rd123$$
    image: customerwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8882"
      protocol: tcp
  orderdb:
    container_name: order-db
    image: mongo
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 27017
      published: "8885"
      protocol: tcp
  orderwebapi:
    build:
      context: C:\Prabhanjan\AspNetCore7\APIGatewaySolution
      dockerfile: OrderWebAPI/Dockerfile
    container_name: order-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: orderdb
      DB_NAME: dms_order
    image: orderwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8886"
      protocol: tcp
  productdb:
    container_name: product-db
    environment:
      MYSQL_ROOT_PASSWORD: P@ssw0rd123$$
    image: mysql:8.0.29-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "8883"
      protocol: tcp
  productwebapi:
    build:
      context: C:\Prabhanjan\AspNetCore7\APIGatewaySolution
      dockerfile: ProductWebAPI/Dockerfile
    container_name: product-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: productdb
      DB_NAME: dms_product
      DB_ROOT_PASSWORD: P@ssw0rd123$$
    image: productwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8884"
      protocol: tcp
networks:
  backend:
    name: dockercompose13597794595954627979_backend